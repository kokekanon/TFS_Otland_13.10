name: Build with vcpkg

on:
  push:
    branches:
      - master
      - v*

    paths:
      - .github/workflows/build-vcpkg.yml
      - cmake/**
      - src/**
      - CMakeLists.txt
      - CMakePresets.json
      - vcpkg.json

  pull_request:
    paths:
      - .github/workflows/build-vcpkg.yml
      - cmake/**
      - src/**
      - CMakeLists.txt
      - CMakePresets.json
      - vcpkg.json

jobs:
  build-vcpkg:
    name: ${{ matrix.os }}-${{ matrix.buildtype }}-luajit=${{ matrix.luajit }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, macos, windows]
        buildtype: [Debug, Release]
        luajit: [on, off]

    env:
      VCPKG_BUILD_TYPE: release

    steps:
      - uses: actions/checkout@v4

      - name: Get latest CMake
        uses: lukka/get-cmake@latest

      - name: Run vcpkg
        uses: lukka/run-vcpkg@v11

      - name: Build with CMake
        uses: lukka/run-cmake@v10
        with:
          buildPreset: vcpkg
          buildPresetAdditionalArgs: "['--config', '${{ matrix.buildtype }}']"
          configurePreset: vcpkg
          configurePresetAdditionalArgs: "['-DUSE_LUAJIT=${{ matrix.luajit }}']"
        continue-on-error: true

      - name: List build directory (Debug)
        if: ${{ matrix.buildtype == 'Debug' }}
        run: dir ${{ runner.workspace }}/build/${{ matrix.buildtype }}
        shell: bash

      - name: List build directory (Release)
        if: ${{ matrix.buildtype == 'Release' }}
        run: dir ${{ runner.workspace }}/build/${{ matrix.buildtype }}
        shell: bash

      - name: Print CMake output (if any)
        run: cat ${{ runner.workspace }}/build/${{ matrix.buildtype }}/CMakeFiles/CMakeOutput.log || echo "No output log found"
        shell: bash

      - name: Upload artifact binary (exe and dll for Windows)
        uses: actions/upload-artifact@v4
        if: ${{ startsWith(matrix.os, 'windows') }}
        with:
          name: binaries-${{ matrix.os }}-${{ matrix.buildtype }}-luajit=${{ matrix.luajit }}-${{ github.sha }}
          path: |
            ${{ runner.workspace }}/build/${{ matrix.buildtype }}/tfs.exe
            ${{ runner.workspace }}/build/${{ matrix.buildtype }}/*.dll

      - name: Upload artifact binary (for macOS/Linux)
        uses: actions/upload-artifact@v4
        if: ${{ !startsWith(matrix.os, 'windows') }}
        with:
          name: binaries-${{ matrix.os }}-${{ matrix.buildtype }}-luajit=${{ matrix.luajit }}-${{ github.sha }}
          path: ${{ runner.workspace }}/build/${{ matrix.buildtype }}/tfs

      # Opcional: Subir todos los archivos para depuraci√≥n si los binarios no se encuentran
      - name: Upload all artifacts for debugging
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: full-build-dir-${{ matrix.os }}-${{ matrix.buildtype }}-luajit=${{ matrix.luajit }}-${{ github.sha }}
          path: ${{ runner.workspace }}/build/${{ matrix.buildtype }}
